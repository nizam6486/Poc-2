name: Ansible AWS Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "aws-test"
      action:
        description: "Action to perform"
        required: true
        default: "deploy"
        type: choice
        options:
          - deploy
          - destroy

permissions:
  id-token: write
  contents: read

env:
  PYTHON_VERSION: "3.12"

jobs:
  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Run Ansible Lint
      #   uses: ansible/ansible-lint@main
      #   with:
      #     path: "**/*.yml"
      #     rules: "**/rules/**/*.yml"

  ansible-syntax-check:
    name: Ansible Syntax Check
    runs-on: ubuntu-latest
    needs: ansible-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install Ansible Collections
        run: |
          ansible-galaxy collection install amazon.aws -f
          ansible-galaxy collection install community.aws

      - name: Syntax Check Playbooks
        run: |
          find . -name "*.yml" -not -path "./.github/*" | xargs -I {} ansible-playbook --syntax-check {} || true

  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [ansible-lint, ansible-syntax-check]
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-session-name: GitHubActions-Ansible

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Install dependencies
        run: |
          pip install ansible boto3 botocore
          ansible-galaxy collection install amazon.aws
          ansible-galaxy collection install community.aws
          
          # Install eksctl
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version
          
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Deploy Infrastructure
        if: inputs.action == 'deploy'
        run: |
          ansible-playbook site.yml \
            -e "environment=${{ inputs.environment }}" \
            -e "aws_region=${{ vars.AWS_REGION }}" \
            -e "git_commit=${{ github.sha }}" \
            -e "git_branch=main"

      - name: Destroy Infrastructure
        if: inputs.action == 'destroy'
        run: |
          ansible-playbook cleanup.yml \
            -e "environment=${{ inputs.environment }}" \
            -e "aws_region=${{ vars.AWS_REGION }}"

      - name: Run Tests
        if: inputs.action == 'deploy'
        run: |
          ansible-playbook tests.yml \
            -e "environment=${{ inputs.environment }}" \
            -e "aws_region=${{ vars.AWS_REGION }}"
