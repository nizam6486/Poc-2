---
- name: Test Application Access
  hosts: localhost
  gather_facts: false
  
  vars:
    env_name: "{{ environment | default('aws-test') }}"
    aws_region: "{{ aws_region | default('us-east-2') }}"
    eks_cluster_name: "eks-{{ env_name }}"

  tasks:
    - name: Update kubeconfig
      shell: aws eks update-kubeconfig --region {{ aws_region }} --name {{ eks_cluster_name }}
      
    - name: Test LoadBalancer connectivity
      shell: |
        LB_URL=$(kubectl get service apache-web-loadbalancer -n default -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' 2>/dev/null || echo "")
        if [ -n "$LB_URL" ]; then
          echo "Testing LoadBalancer: http://$LB_URL"
          curl -I "http://$LB_URL" --connect-timeout 10 || echo "LoadBalancer not accessible"
        else
          echo "LoadBalancer not ready"
        fi
      register: lb_test
      
    - name: Test NodePort connectivity
      shell: |
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="ExternalIP")].address}' 2>/dev/null || kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        if [ -n "$NODE_IP" ]; then
          echo "Testing NodePort: http://$NODE_IP:30080"
          curl -I "http://$NODE_IP:30080" --connect-timeout 10 || echo "NodePort not accessible"
        else
          echo "No node IP found"
        fi
      register: nodeport_test
      
    - name: Display test results
      debug:
        msg: |
          ðŸ§ª ACCESS TEST RESULTS:
          
          LoadBalancer Test:
          {{ lb_test.stdout }}
          
          NodePort Test:
          {{ nodeport_test.stdout }}
          
          ðŸ“Š Current Status:
          Pods: {{ ansible_facts.pods | default('Unknown') }}
          Services: {{ ansible_facts.services | default('Unknown') }}